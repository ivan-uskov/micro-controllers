; ШАХМАТНОЕ ПОЛЕ
;─────────────────────────────────────────────────────────────────────────────

  .model tiny 
  .code       
   org 100h    
Start:      
          ;--- Очистка экрана
  mov AX,0003h 
  int 10h      
  
  mov AX,0B800h   ;настройка сегмента данных DS на начало экрана (сегмент B800)
  mov DS,AX       
          ;===константы                    
  rY=3            ;размер клетки по вертикали
  rX=6            ;размер клетки по горизонтали
  kY=8            ;кол-во клеток по вертикали   
  kX=8            ;кол-во клеток по горизонтали (только четное)
                  ;  Внимание!   rY*kY  должно быть до 25, а  rX*kX  -до 80

  mov DL,'░'      ;символ для "черной" клетки
  mov DH,4Bh      ;цвет   для "черной" клетки

  mov AL,'▓'      ;символ для "белой" клетки
  mov AH,2Ah      ;цвет   для "белой" клетки
       
  mov BX,0        ;начальное смещение на экране (левый верх)

            ;===рисование
  mov CH,kY       ;кол-во клеток по вертикали
Metka2:
  push BX         ;сохранили адрес начала строки в стеке
            ;---рисование горизонтального ряда
  mov CL,kX       ;кол-во клеток по горизонтали
Metka1:
  call Pram       ;рисование одного прямоугольника
  add BX,rX*2     ;на адрес следующей клетки (rX позиций, на каждую 2 байта)
  xchg AX,DX      ;обмен атрибутов -"черных" и "белых" (для чередования цветов)
  dec CL          ;уменьшение счетчика клеток по горизонтали
  jnz Metka1
            ;перед рисованием нового ряда:
  pop BX          ;восстановили адрес начала строки
  add BX,160*rY   ;новый экранный адрес (rY строк, по 160 байтов на каждую)
  xchg AX,DX      ;обмен атрибутов -"черных" и "белых"
                  ;     (чтобы новый ряд начался с другого цвета))
  dec CH          ;уменьшение счетчика кол-ва строк
  jnz Metka2
    
            ;---завершение программы
  mov AH,10h     
  int 16h
  ret         

  ;=== Подпрограмма рисования прямоугольника 
  ;    (из DH кол-во строк, из DL кол-во столбцов, символ из AL, цвет из AH)
Pram:
  push BX
  push DX
  push CX

  mov DH,rY
  mov DL,rX
Pram1:
  mov CL,DL         ;кол-во позиций
  push BX           ;запомнили начало строки
Pram2:          ;рисование строки
  mov [BX],AX       ;символ из AL в ячейку, номер которой в BX  
                    ;цвет   из AH в ячейку, номер которой в BX + 1 
  inc BX            ;пересчет BX вправо (BX=BX+2)  (можно командой add BX,2)
  inc BX            

  dec CL            ;уменьшение счетчика позиций на 1
  jnz Pram2         ;если не ноль, то продолжить рисование строки
                ;строка нарисована, переход на следующую строку
  pop BX        ;восстановили начало строки (или уменьшить BX на DL*2)  
  add BX,160    ;начало следующей строки на 80*2 байтов больше
  dec DH        ;уменьшили счетчик строк
  jnz Pram1     ;на рисование следующей строки  

  pop CX
  pop DX
  pop BX
  ret
        
end Start
;─────────────────────────────────────────────────────────────────────────────
