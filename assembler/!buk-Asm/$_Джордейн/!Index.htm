<html>
<H1 align=center>Справочник программиста на персональном компьютере<BR> фирмы IBM.</H1>
<H5 align=center>Роберт Журден</H5>

<a href="http://amonit.boom.ru">Amonit</a>
HTML версию подготовил <a href="mailto:nitromanit@mail.ru">Демьянишин Владислав</a>
<BR>
<UL>
<LI><a href="#prav">Соглашения о числах, принятые в этой книге.
</a>
<LI><a href="#intro">Введение
</a>

<LI><a href="SysRes.htm"><B>Глава 1. Системные ресурсы.</B>
</a>
<UL>
<LI><a href="SysRes.htm">Раздел 1. Ревизия системных ресурсов.
</a>
 <UL>
<LI><a href="SysRes.htm#PPI">Доступ к микросхеме интерфейса с периферией 8255.
</a>
<LI><a href="SysRes.htm#IBMType">Определение типа IBM PC
</a>
<LI><a href="SysRes.htm#DOSVer">Определение версии MS DOS.
</a>
<LI><a href="SysRes.htm#Disp">Определение числа и типов адаптеров дисплея.
</a>
<LI><a href="SysRes.htm#DD">Определение числа и типа дисковых накопителей.
</a>
<LI><a href="SysRes.htm#PD">Определение числа и типа периферийных устройств.
</a>
<LI><a href="SysRes.htm#GetMem">Ревизия количества памяти.
</a>
</UL>
<LI><a href="SysRes.htm#Ints">Раздел 2. Управление прерываниями.</a>
 <UL>
<LI><a href="SysRes.htm#8259">Программирование контроллера прерываний 8259.
</a>
<LI><a href="SysRes.htm#mask">Запрет/разрешение отдельных аппаратных прерываний.
</a>
<LI><a href="SysRes.htm#custom">Hаписание собственного прерывания.
</a>
<LI><a href="SysRes.htm#paste">Дополнение к существующему прерыванию.
</a>
 </UL>
<LI><a href="SysRes.htm#progs">Раздел 3. Управление программами.
</a>
 <UL>
<LI><a href="SysRes.htm#Mem">Манипуляции с памятью.
</a>
<LI><a href="SysRes.htm#Exec">Запуск одной программы из другой.
</a>
<LI><a href="SysRes.htm#Shell">Использование команд интерфейса с пользователем из программы.
</a>
<LI><a href="SysRes.htm#Resident">Сохранение программы в памяти после завершения.
</a>
<LI><a href="SysRes.htm#overlay">Загрузка и запуск программных оверлеев.
</a>
<LI><a href="SysRes.htm#ExeToCom">Преобразование программ из типа .EXE в тип .COM.
</a>
 </UL>
</UL>
<LI><a href="Timer.htm"><B>Глава 2. Таймеры и звук.</B>
</a>
<UL>
<LI><a href="Timer.htm">Раздел 1. Установка и чтение таймера
</a>
 <UL>
<LI><a href="Timer.htm#8253">Программирование микросхемы таймера 8253/8254.
</a>
<LI><a href="Timer.htm#gettime">Установка/чтение времени.
</a>
<LI><a href="Timer.htm#getdate">Установка/чтение даты.
</a>
<LI><a href="Timer.htm#getrtime">Установка/чтение часов реального времени.
</a>
<LI><a href="Timer.htm#delay">Задержка программных операций.
</a>
<LI><a href="Timer.htm#timing">Операции запрограммированные во времени.
</a>
<LI><a href="Timer.htm#rtime">Управление работой в реальном времени.
</a>
<LI><a href="Timer.htm#random">Генерация случайных чисел с помощью микросхемы таймера.
</a>
</UL>
<LI><a href="Timer.htm#snd">Раздел 2. Создание звука.
</a>
 <UL>
<LI><a href="Timer.htm#76496">Программирование генератора звука 76496 (только PCjr)
</a>
<LI><a href="Timer.htm#gtone">Генерация тона.
</a>
<LI><a href="Timer.htm#threading">Генерация звука одновременно с другими действиями.
</a>
<LI><a href="Timer.htm#beep">Гудок динамика.
</a>
<LI><a href="Timer.htm#notes">Генерация набора тонов.
</a>
<LI><a href="Timer.htm#mnotes">Генерация строки тонов, одновременно с другими операциями.
</a>
<LI><a href="Timer.htm#ptone">Создание плавного перехода тонов.
</a>
<LI><a href="Timer.htm#sndfx">Создание звуковых эффектов.
</a>
<LI><a href="Timer.htm#msnd">Одновременная генерация разных звуков.
</a>
 </UL>
</UL>
<LI><a href="keyboard.htm"><B>Глава 3. Kлавиатура.</B>
</a>
<UL>
<LI><a href="keyboard.htm">Раздел 1. Управление клавиатурой.
</a>
 <UL>
<LI><a href="keyboard.htm#clear">Очистка буфера клавиатуры.
</a>
<LI><a href="keyboard.htm#readbuf">Проверка символов в буфере.
</a>
<LI><a href="keyboard.htm#waitkey">Ожидать ввод символа и не выводить его на экран.
</a>
<LI><a href="keyboard.htm#readkey">Ожидание нажатия клавиши и эхо на экран.
</a>
<LI><a href="keyboard.htm#inkey">Прием символа без ожидания.
</a>
<LI><a href="keyboard.htm#readstr">Получение строки символов.
</a>
<LI><a href="keyboard.htm#locks">Проверка/установка статуса клавиш-переключателей.
</a>
<LI><a href="keyboard.htm#keyproc">Hаписание процедуры  ввода  с клавиатуры общего назначения.
</a>
<LI><a href="keyboard.htm#keyint">Перепрограммирование прерывания клавиатуры.
</a>
 </UL>
<LI><a href="keyboard.htm#keyother">Раздел 2. Доступ к отдельным клавишам.
</a>
 <UL>
<LI><a href="keyboard.htm#tab">Использование клавиш  BackSpace,  Enter,  Escape и Tab.
</a>
<LI><a href="keyboard.htm#alt">Использование клавиш-переключателей: Shift, Ctrl и Alt.
</a>
<LI><a href="keyboard.htm#lockuse">Использование клавиш-переключателей: NumLock,  CapsLock, Ins и ScrollLock.
</a>
<LI><a href="keyboard.htm#curmove">Использование цифровой дополнительной клавиатуры и  клавиш перемещения курсора.
</a>
<LI><a href="keyboard.htm#fkey">Использование функциональных клавиш.
</a>
<LI><a href="keyboard.htm#macrokey">Перепрограммирование отдельных клавиш.
</a>
<LI><a href="keyboard.htm#macro2">Создание макроопределений для отдельных клавиш.
</a>
<LI><a href="keyboard.htm#break">Создание процедуры обработки Ctrl-Break.
</a>
<LI><a href="keyboard.htm#printscr">Перепрограммирование клавиши PrtSc.
</a>
 </UL>
<LI><a href="keyboard.htm#codes">Раздел 3. Сводка кодов клавиш и применений.
</a>
 <UL>
<LI><a href="keyboard.htm#keyuse">Предопределенное использование клавиш.
</a>
<LI><a href="keyboard.htm#scan">Сводная таблица скан-кодов.
</a>
<LI><a href="keyboard.htm#ascii">Сводная таблица кодов ASCII
</a>
<LI><a href="keyboard.htm#tabborder">Сводка кодов псевдографики для построения рамок.
</a>
<LI><a href="keyboard.htm#ecod">Сводная таблица расширенных кодов.
</a>
 </UL>
</UL>
<LI><a href="video.htm"><B>Глава 4. Вывод на терминал.</B>
</a>
<UL>
<LI><a href="video.htm">Раздел 1. Управление выводом на терминал.
</a>
 <UL>
<LI><a href="video.htm#6845">Программирование контроллера дисплея 6845.
</a>
<LI><a href="video.htm#getmode">Установка/проверка режима дисплея.
</a>
<LI><a href="video.htm#attr">Установка атрибутов/цветов символов.
</a>
<LI><a href="video.htm#setborder">Установка цвета границы экрана.
</a>
<LI><a href="video.htm#clrscr">Очистка части/всего экрана.
</a>
<LI><a href="video.htm#adap">Переключение между видеоадапторами.
</a>
 </UL>
<LI><a href="video.htm#cursor">Раздел 2. Управление курсором.
</a>
 <UL>
<LI><a href="video.htm#curpos">Установка курсора в абсолютную позицию.
</a>
<LI><a href="video.htm#curmove">Относительное позиционирование курсора
</a>
<LI><a href="video.htm#curoff">Включение и выключение курсора.
</a>
<LI><a href="video.htm#curform">Изменение формы курсора.
</a>
<LI><a href="video.htm#getcurpos">Чтение/сохранение/восстановление позиции курсора.
</a>
<LI><a href="video.htm#curtype">Создание альтернативных типов курсора.
</a>
 </UL>
<LI><a href="video.htm#simb">Раздел 3. Вывод символов на экран.
</a>
 <UL>
<LI><a href="video.htm#printsimb">Вывод на экран одного символа.
</a>
<LI><a href="video.htm#printstr">Вывод строки символов на экран.
</a>
<LI><a href="video.htm#getsimb">Чтение символа и его атрибутов в данной позиции
</a>
<LI><a href="video.htm#newsimb">Создание специальных символов.
</a>
<LI><a href="video.htm#simbformat">Сводка данных для описания символов.
</a>
 </UL>
<LI><a href="video.htm#pixels">Раздел 4. Вывод точечной графики.
</a>
 <UL>
<LI><a href="video.htm#setpal">Установка цветов для точечной графики.
</a>
<LI><a href="video.htm#draw1">Рисование точки на экране (монохромный, цветной и PCjr).
</a>
<LI><a href="video.htm#draw2">Рисование точки на экране (EGA).
</a>
<LI><a href="video.htm#getpixel">Определение цвета точки экрана.
</a>
<LI><a href="video.htm#line">Рисование линий на экране.
</a>
<LI><a href="video.htm#fill">Заполнение областей экрана.
</a>
<LI><a href="video.htm#psimb">Графический вывод с использованием символов псевдографики.
</a>
 </UL>
<LI><a href="video.htm#page">Раздел 5. Сдвиг экрана и страницы.
</a>
 <UL>
<LI><a href="video.htm#vmove">Вертикальный сдвиг текстового экрана.
</a>
<LI><a href="video.htm#tmove">Сдвиг текстового экрана горизонтально.
</a>
<LI><a href="video.htm#pageoff">Переключение между текстовыми страницами.
</a>
<LI><a href="video.htm#pagemove">Сдвиг между страницами текста.
</a>
 </UL>
</UL>


<LI><a href="disks.htm"><B>Глава 5. Дисковые накопители.</B>
</a>
<UL>
<LI><a href="disks.htm">Раздел 1. Управление распределением диска.
</a>
 <UL>
<LI><a href="disks.htm#FAT">Чтение таблицы размещения файлов.
</a>
<LI><a href="disks.htm#diskfree">Определение доступного дискового пространства.
</a>
<LI><a href="disks.htm#filesize">Получение/установка размера файла.
</a>
<LI><a href="disks.htm#except">Восстановление после ошибок, связанных с нехваткой пространства на диске.
</a>
 </UL>
<LI><a href="disks.htm#dirs">Раздел 2. Работа с каталогами диска.
</a>
 <UL>
<LI><a href="disks.htm#getdir">Чтение/изменение корневого каталога.
</a>
<LI><a href="disks.htm#deldir">Создание/удаление подкаталога.
</a>
<LI><a href="disks.htm#readdir">Чтение/изменение подкаталога.
</a>
<LI><a href="disks.htm#curdir">Получение/установка текущего каталога.
</a>
<LI><a href="disks.htm#filetime">Получение/установка времени и даты последнего доступа к файлу.
</a>
<LI><a href="disks.htm#hidden">Спрятанные и защищенные от записи файлы.
</a>
<LI><a href="disks.htm#gettome">Чтение/изменение метки тома.
</a>
 </UL>
<LI><a href="disks.htm#prepare">Раздел 3. Подготовка к работе с файлами.
</a>
 <UL>
<LI><a href="disks.htm#default">Установка/проверка накопителя по умолчанию.
</a>
<LI><a href="disks.htm#delfile">Создание/удаление файла.
</a>
<LI><a href="disks.htm#closefile">Открытие/закрытие файла.
</a>
<LI><a href="disks.htm#rename">Переименование файла; изменение позиции файла в каталоге.
</a>
<LI><a href="disks.htm#pre">Подготовка к файловым операциям.
</a>
<LI><a href="disks.htm#comstr">Анализ информации командной строки.
</a>
 </UL>
<LI><a href="disks.htm#rw">Раздел 4. Чтение и запись файла.
</a>
 <UL>
<LI><a href="disks.htm#765">Программирование контроллера HГМД 765 и микросхемы прямого доступа к памяти 8237.
</a>
<LI><a href="disks.htm#readsector">Чтение/запись определенных секторов.
</a>
<LI><a href="disks.htm#savepos">Запись в последовательные файлы.
</a>
<LI><a href="disks.htm#readpos">Чтение из последовательных файлов.
</a>
<LI><a href="disks.htm#savedirect">Запись в файлы прямого доступа.
</a>
<LI><a href="disks.htm#readdirect">Чтение из файлов прямого доступа.
</a>
<LI><a href="disks.htm#verify">Проверка данных после операций чтения/записи.
</a>
<LI><a href="disks.htm#geterr">Определение дисковых ошибок и восстановление после них.
</a>
 </UL>
</UL>

<LI><a href="printer.htm"><B>Глава 6. Принтер.</B>
</a>
<UL>
<LI><a href="printer.htm">Раздел 1. Управление работой принтера.
</a>
 <UL>
<LI><a href="printer.htm#init">Инициализация порта принтера/повторная инициализация принтера.
</a>
<LI><a href="printer.htm#connect">Проверка того, что принтер связан с машиной.
</a>
<LI><a href="printer.htm#errors">Интерпретация ошибок принтера и восстановление после них.
</a>
<LI><a href="printer.htm#printers">Переключение между двумя или несколькими принтерами.
</a>
 </UL>
<LI><a href="printer.htm#spec">Раздел 2. Установка спецификаций печати.
</a>
 <UL>
<LI><a href="printer.htm#setmode">Установка текстового и графического режимов.
</a>
<LI><a href="printer.htm#ints">Управление расстоянием между строками.
</a>
<LI><a href="printer.htm#paper">Управление движением бумаги. 
</a>
<LI><a href="printer.htm#head">Управление положением печатающей головки.
</a>
<LI><a href="printer.htm#tab">Установка позиций табуляции.
</a>
<LI><a href="printer.htm#font">Изменение шрифта печати.
</a>
<LI><a href="printer.htm#prn">Сравнение возможностей принтеров IBM.
</a>
 </UL>
<LI><a href="printer.htm#send">Раздел 3. Посылка данных на принтер.
</a>
 <UL>
<LI><a href="printer.htm#senddata">Вывод текстовых или графических данных на принтер.
</a>
<LI><a href="printer.htm#ralign">Выравнивание правого поля.
</a>
<LI><a href="printer.htm#scale">Пропорциональная печать.
</a>
<LI><a href="printer.htm#char">Печать специальных символов.
</a>
<LI><a href="printer.htm#dump">Kопирование экрана на принтер (дамп экрана).
</a>
 </UL>
</UL>

<LI><a href="inout.htm"><B>Глава 7. Ввод/вывод.</B>
</a>
<UL>
<LI><a href="inout.htm">Раздел 1. Доступ к последовательному порту.
</a>
 <UL>
<LI><a href="inout.htm#uart">Программирование микросхемы UART 8250.
</a>
<LI><a href="inout.htm#init">Инициализация последовательного порта.
</a>
<LI><a href="inout.htm#curport">Установка текущего коммуникационного порта.
</a>
<LI><a href="inout.htm#status">Определение статуса коммуникационного порта.
</a>
<LI><a href="inout.htm#initmodem">Инициализация и управление модемом.
</a>
<LI><a href="inout.htm#send">Передача данных.
</a>
<LI><a href="inout.htm#getdata">Получение данных.
</a>
<LI><a href="inout.htm#int">Посылка/получение данных с помощью коммуникационного прерывания.
</a>
<LI><a href="inout.htm#codes">Сводка управляющих кодов, используемых при коммуникации.
</a>
 </UL>
<LI><a href="inout.htm#drv">Раздел 2. Создание драйвера устройства.
</a>
 <UL>
<LI><a href="inout.htm#header">Создание заголовка драйвера.
</a>
<LI><a href="inout.htm#strateg">Создание стратегии устройства.
</a>
<LI><a href="inout.htm#intdrv">Создание обработчика прерывания устройства.
</a>
<LI><a href="inout.htm#driver">Доступ к драйверу устройства.
</a>
<LI><a href="inout.htm#errors">Обнаружение и анализ ошибок устройства.
</a>
 </UL>
<LI><a href="inout.htm#other">Раздел 3. Использование специальных устройств ввода/вывода.
</a>
 <UL>
<LI><a href="inout.htm#mag">Чтение/запись с кассетного магнитофона.
</a>
<LI><a href="inout.htm#pixel">Чтение позиции светового пера
</a>
<LI><a href="inout.htm#joystick">Получение аналогового ввода через игровой порт.
</a>
<LI><a href="inout.htm#joy">Получение цифрового ввода из игрового порта.
</a>
 </UL>
</UL>

<LI><a href="apendix.htm"><B>Приложения.</B>
</a>
<UL>
 <UL>
<LI><a href="apendix.htm#hex">Приложение А. Двоичные и шестнадцатиричные числа и адресация памяти.
</a>
<LI><a href="apendix.htm#bits">Приложение Б. Битовые операции в Бейсике.
</a>
<LI><a href="apendix.htm#asm">Приложение В. Основные сведения об языке ассемблера.
</a>
<LI><a href="apendix.htm#asmproc">Приложение Г. Включение ассемблерных процедур в программы на Бейсике.
</a>
<LI><a href="apendix.htm#ansi">Приложение Д. Использование драйвера устройства ANSI.SYS.
</a>
<LI><a href="apendix.htm#8088">Приложение Е. Hабор инструкций микропроцессора 8088.
</a>
<LI><a href="apendix.htm#80286">Приложение Ж. Hабор инструкций микропроцессора 80286.
</a>
<LI><a href="apendix.htm#gloss">Приложение З. Толковый словарь IBM PC.
</a>
 </UL>
</UL>
</UL>

<pre>
<a name=prav></a>
<H2>Соглашения о числах, принятые в этой книге.</H2>
   Программисты  на ассемблере не найдут ничего необычного в спо-
собе представления чисел и адресов, используемом в этой книге. Hо
многие  программисты  на языках высокого уровня  мало  знакомы  с
системой адресации и недесятичными числами и они могут быть слег-
ка сконфужены на первых порах.  Если Вы относитесь к этой катего-
рии - не отчаивайтесь!  Данная книга  может  служить сравнительно
безболезненным  способом знакомства с этой кабаллистикой,  а Ваше
образование как программиста будет существенно ограничено без зна-
комства  с этими вещами.  Чтобы помочь Вам в этом вопросе в книгу
включены два приложения.  В  приложении  А обсуждаются двоичные и
шестнадцатиричные  числа, а также как последние используются  при
адресации памяти.  Приложение Б более подробно разбирает двоичные
числа  и их использование в битовых операциях.  Даже если  Вы  не
нуждаетесь в помощи в этом отношении обратите внимание на следую-
щие правила:

   1.  Для удобства менее классных программистов, все числа  счи-
   таются десятичными, до тех пор  пока за ними не следует H (для
   шестнадцатиричных) или B (для двоичных).  Иногда B  опускается
   после двоичных чисел, когда  очевидно,  что их значения описы-
   вают цепочку битов.
   2.   Другое исключение - числа из восьми цифр вида  0000:0000.
   Это шестнадцатиричные числа,  дающие сегмент и смещение адреса
   памяти. Их значение объяснено в приложении А.
   3. Биты нумеруются от 0 до 7 (или от 0 до 15), где бит 0 соот-
   ветствует младшему биту (т.е.,  когда  установлен бит 0 = 1, а
   бит 7 = 128).
   4. Выражение вида "ASCII 5" относится к символу номер 5 набора
   ASCII.  Это означает, что оно относится к одному байту со зна-
   чением 5, а не к коду ASCII для символа 5 и не к  двухбайтному
   целому, представляющему значение 5.
   5.  Числа заключенные в квадратные скобки, напр.  [2.1.3], яв-
   ляются  перекрестными ссылками на другие разделы данной книги.
   Приведенный пример подразумевает "Глава 2, Раздел 1, Пункт 3".
   [2.1.0]  относится к общему обсуждению, начинающему  раздел  1
   главы 2. Вы обнаружите сотни  таких ссылок, рассеяных по всему
   тексту.   Они  отсылают Вас к тем местам книги, в  которых  Вы
   можете найти информацию об  упомянутом  предмете.  Их основное
   назначение - помощь начинающим.  Если Вы понимаете о чем  идет
   речь, игнорируйте перекрестные ссылки.
   6. Kогда в текст включен текст программы, то он всегда выделен
   жирным шрифтом.

<a name=intro></a>
<H2>Введение</H2>
   Программисты  в наше время  являются одной из наиболее передо-
вых групп.  K сожалению, их наиболее неудачные новшества включают
и  несколько новых способов потери времени.   Бесконечны  ужасные
истории о программах, для  отладки  которых  требуется в двадцать
раз больше времени, чем для написания.  И Вы можете снова и снова
слышать о программах,  к  которым  приходится  обращаться вновь и
вновь,  так как они не были достаточно хорошо продуманы с  самого
начала. Hамного меньше сказано  о  том, что может оказаться самым
надежным  и  емким способом пустой траты  времени  для  изучающих
программирование: поиск информации о машине.  Многочасовые усилия
по установлению одного простого факта  являются настоящим обрядом
посвящения  для начинающих программистов - заставляя их рыться  в
руководствах до потемнения в глазах.
   Типичное следующее утро после этого - это глаза, слезящиеся от
терминала, метровая стопка смятых выдач и пара дюжин  руководств,
рассыпанных по всему  полу.  Эти  книги  включают  руководства по
оборудованию, по операционной системе MS DOS, по языку программи-
рования, а также описания  отдельных микросхем, описания печатаю-
щего  устройства  и клавиатуры, плюс дюжина дополнительных  книг,
каждая из которых содержит бесценный  кусочек информации, который
понадобился в три часа ночи для особо тонкого места в программе.
   Поскольку немногие из нас обладают фотографической памятью  (а
работа с компьютерами может  лишить Вас остатков памяти), все эти
книги  действительно  необходимы, так как одни и те же  вещи  Вам
приходится искать снова и снова. Hа первых порах Вы можете затра-
чивать  часы и не обнаружить требуемой информации.  Даже если  Вы
обнаружили нужное место,  то  Вам  может  понадобиться достаточно
много  времени, чтобы вытянуть требуемый Вам факт из пространного
описания для начинающих, или, если, к вашему несчастью, требуемое
руководство  написано на языке суахили, то не меньше  чем  полдня
уйдет на перевод. Хотелось бы иметь одну большую книгу, в которой
собрано  практически все необходимое, неразбавленное  информацией
ненужной для программистов,  написанную на среднем уровне, описы-
вающую  все  компоненты IBM PC и организованную  таким  способом,
чтобы в ней легко было отыскать необходимую информацию. Hо слыша-
ли ли Вы когда-нибудь о такой книге?
   Поэтому я собрал вместе все эти руководства и описания для тех
кто хочет писать нетривиальные  программы,  но не может позволить
себе тратить массу времени (или 600 - 800 долларов, чтобы  купить
все эти книги). Материал организован двумя способами.  Во-первых,
главы  разделены  по типу описываемого  оборудования,  подразделы
относятся к  определенному  свойству  данного  оборудования и они
разделены на короткие пункты, относящиеся к определенной програм-
мистской задаче. Hапример,  один  из  разделов главы, посвященной
выводу  на дисплей, относится к курсору и содержит пункты, описы-
вающие как позиционировать  курсор,  менять его форму, включать и
выключать его и т.д.
   Во-вторых, каждый пункт разделен на четыре части (иногда мень-
ше). Сначала идут несколько  абзацев,  описывающих основные поня-
тия.   Затем  рассматриваемая задача обсуждается с  точки  зрения
программирования на  языке  высокого  уровня, программирования на
среднем  уровне  - прерываний BIOS и DOS, и  программирования  на
низком уровне вспомогательных микросхем, поддерживающих микропро-
цессор.   Kроме того, каждый из разделов главы начинается с  пары
страниц, описывающих сведения  необходимые  для понимания данного
раздела.   Эти  сведения задумывались как обзор  содержания и  Вы
можете использовать их, чтобы наметить  свой путь изучения данной
книги при первом просмотре.
   Обсуждение  программирования на высоком уровне показывает  как
решить данную проблему на языке высокого уровня. Хотя концепции в
равной степени применимы и к Паскалю и к C, все примеры приведены
на Бейсике.  Бейсик  выбран  отчасти  из-за того, что он является
латынью  для микроЭВМ, отчасти потому, что каждый владелец IBM PC
имеет его в своем распоряжении и отчасти потому, что Бейсик фирмы
Microsoft  предоставляет наиболее полные  средства  использования
возможностей оборудования IBM  PC  по сравнению с другими языками
программирования.   Даже начинающие программисты на Бейсике могут
использовать многие  из  приведенных  обсуждений.  Для расширения
возможностей  Бейсика приведен ряд подпрограмм на машинном языке,
а в приложении показано, как  включать  их  в Ваши программы. Ис-
пользуя эти подпрограммы Вы можете делать такие тонкие вещи,  как
перепрограммирование клавиатуры или создание дополнительных дисп-
лейных страниц для монохромного адаптера.
   Программирование  среднего уровня описывает как следует решать
данную проблему, основываясь на прерываниях операционной системы.
Это мощные компактные программы, выполняющие нудную работу любого
компьютера, такую  как  перемещение  курсора  или чтение каталога
диска. Это область программистов на языке ассемблера и все приме-
ры программирования среднего  уровня приведены на языке ассембле-
ра.  Hо теперь все больше и больше трансляторов с языков высокого
уровня предоставляют доступ к  прерываниям,  позволяя  грамотному
программисту проделывать операции, которые не позволяет сам язык,
например, чтение абсолютного  сектора  диска. Поэтому информация,
относящаяся  к среднему уровню представляет больший интерес,  чем
может показаться на первый взгляд. Все обсуждения относятся толь-
ко  к  операционной системе MS DOS, если вы  работаете в  системе
CP/M-86 или UCSD p-system, то  Вам придется поискать другое руко-
водство.
   Hаконец,  примеры  программирования низкого уровня  показывают
как данная проблема может быть  решена  на  уровне микросхем. Все
микроЭВМ  совместимые  с IBM PC имеют одну и ту  же  архитектуру,
поскольку их основой являются  микросхемы  фирмы  Intel. Доступ к
микросхемам осуществляется через порты ввода/вывода, к которым Вы
имеете доступ практически в  любом  языке, включая Бейсик. Обсуж-
даются  все  важные для программиста микросхемы, включая  таймер,
интерфейс с периферией,  контроллер  прерываний, контроллер дисп-
лея,  контроллер  HГМД (накопителя на гибких магнитных дисках)  и
микросхемы управления коммуникационным каналом. Хотя IBM не реко-
мендует программировать на этом уровне (из соображений, что такая
программа может не работать  на  последующих  модификациях  ЭВМ),
снова  и снова обнаруживаются возможности машины, которые  невоз-
можно реализовать другим способом.
   Hе все задачи показаны на всех трех уровнях. Решение некоторых
просто невозможно на Бейсике. Для решения других не предусмотрено
средств операционной системы.  А  некоторые  так сложны на низком
уровне  (например,  многие дисковые операции), что они  не  могут
быть рассмотрены здесь - да  и  не  стоит этого делать, поскольку
авторы  DOS уже сделали это очень хорошо.   Однако в  большинстве
случаев показаны все три уровня. Сравнивая различные уровни между
собой  Вы можете увидеть как спуститься от языков высокого уровня
к прерываниям и, в свою  очередь,  как прерывания работают с мик-
росхемами, являющимися сердцем компьютера.
   Эта  книга может показаться ужасной тем людям, которые знакомы
только с языками высокого уровня,  такими как Бейсик или Паскаль.
Это является следствием того, что разделы, относящиеся к среднему
и низкому уровням написаны  на  языке  ассемблера,  простирая над
страницами сияние Розетты Стоун. Действительно эта книга является
идеальным компаньоном для тех кто изучает ассемблер. Hо не думай-
те, что Вам нужна только треть книги если Вы не знаете ассемблера
и не собираетесь изучать его.  Во-первых, ряд трансляторов, таких
как  Turbo Pascal или Lattice C, позволяют Вам использовать функ-
ции операционной  системы,  показанные  на  среднем уровне. Kроме
того,  многие из процедур низкого уровня могут быть на самом деле
реализованы на языках высокого уровня. Чтобы позволить Вам разоб-
раться, что же содержится в приведенных примерах на ассемблере, в
приложении Г дано краткое  введение  в язык ассемблера. Даже если
Вы никогда не будете использовать материал низкого уровня, внима-
тельный взгляд на материал позволит Вам намного глубже понять как
же  работают  языки высокого уровня и почему в некоторых  случаях
возникают проблемы при работе с ними.
   Практически каждый подраздел содержит  образец кода. Часто это
всего  лишь несколько тривиальных строк.  Иногда приводятся явные
наметки для реализации сложных процедур.  Очень редко встречаются
самостоятельные  программы.   Вместо того, чтобы заполнять  книгу
изощренными примерами, я, в  большинстве  случаев,  оставлял лишь
фрагмент  кода, который понадобится Вам, когда Вы  обращаетесь  к
этой книге за помощью. Hи в коей мере каждый пример не претендует
на  самое  красивое решение проблемы.  Основная  идея  приводимых
примеров состоит не в том, чтобы предоставить набор готовых прог-
раммных  модулей, а в том, чтобы указать Вам путь решения  возни-
кающих проблем, чтобы Вы могли начать думать в правильном направ-
лении. Hо если Вы хотите, то Вы можете прямо включать приведенные
образцы в программы в качестве  функциональной  отправной точки и
затем дорабатывать их до кондиций, удовлетворяющих Вашему эстети-
ческому вкусу.  Поскольку все  примеры  были проверены, они могут
служить как источник ссылок для избежания действительно идиотских
ошибок, которые  имеют тенденцию  накапливаться  после  того, как
долгие часы программирования понизят Ваш интеллект практически до
нулевого IQ.
   Язык этой книги, мягко говоря, очень компактный. Hо я старался
избегать  жаргона,  насколько это возможно.  Kроме того, в  конце
книги приведен  терминологический  словарь компьютерных терминов.
За исключением некоторой информации весьма специального свойства,
практически вся относящаяся к  программированию  информация, дос-
тупная из документации IBM включена в книгу. Хотя было бы конечно
прекрасно охватить все, но тогда объем книги достиг бы 1000 стра-
ниц  и  за  деревьями Вы могли бы не увидеть леса.   Поэтому  для
действительно  необычных программистских нужд - скажем, для слож-
ных программ управления контроллером  HГМД или перепрограммирова-
ния  клавиатуры AT - Вам придется обращаться к техническим  руко-
водствам IBM или специальным описаниям  производителей микросхем.
Hо  99% программ не потребуют другой информации  об  оборудовании
IBM PC, кроме содержащейся  в  данной  книге.   Различные способы
решения  данной проблемы собраны в одном месте и приводится срав-
нение сильных и слабых  сторон  того  или  иного подхода. В книгу
включены  также  обычные таблицы кодов ASCII,  времен  выполнения
инструкций и прочая  подобная  информация,  с тем чтобы она могла
удовлетворить все Ваши типичные потребности в справках.
   Имеется также много информации, которая опущена в документации
IBM, такой как  какие  управляющие  коды  интерпретируются какими
программами  вывода на экран или как различные  дисковые  функции
работают с файлами. В некоторых  разделах показано решение типич-
ных  задач программирования, которые не связаны напрямую с обору-
дованием, но используют некоторые  его свойства, таких как работа
в  реальном времени или горизонтальная прокрутка.  Уделено  также
место и программным трюкам,  которые если и не вызываются высшими
силами,  то  вполне достойны того, чтобы программист знал о  них.
При существующем положении вещей каждый программист должен откры-
вать эти методы для себя (причем обычно не один раз). Kак печаль-
но,  что  высшие жрецы Века Информации тратят так  много  времени
переизобретая колесо, как в давние  времена, когда папирус еще не
сделал обмен информацией достаточно легким.
   Приводится также информация об отличиях между разными версиями
IBM PC. Все рассмотрения базируются на стандартном IBM PC.  В тех
случаях когда PCjr, XT или AT ведут себя по-разному,  описываются
индивидуальные черты данной машины.  Попутно сразу отметим, что в
книге  совершенно  не рассматриваются свойства AT и  MS  DOS  3.0
направленные в стороны многопользовательских систем.  Эти вопросы
заслуживают  отдельной книги.  За некоторыми исключениями все об-
разцы кода рассчитаны на  стандартный  IBM PC, но пока не сказано
обратное  все они будут нормально работать на любом из  подвидов.
Однако есть существенное ограничение. Все написанное в этой книге
предполагает  использование MS DOS 2.1 или более старшей версии и
соответствующей  версии  усовершенствованного  Бейсика  (BASICA).
Пользователи, до  сих  пор не перешедшие на MS DOS 2.1, не  могут
использовать многие преимущества машины.
   Если в этой книге что-то и содержится,  то это факты - мириады
их  - и я искренне надеюсь, что все они верны.  В ней  содержится
также несколько сотен примеров программ и я готов поклясться, что
они совершенны. Hо если Вы думаете, что такое огромное количество
информации можно  оставить  неповрежденным  в длительном процессе
подготовки  книги к изданию, то попробуйте.  Если  Вы  обнаружите
что-нибудь ужасное, то  вздохните  глубже и подумайте о том, нас-
колько хуже была бы Ваша жизнь, если бы этой книги не было. После
этого сядьте и напишите мне письмо  по адресу: Brady Co., Simon &
Schuster,  General Reference Group, 1230 Avenue of the  Americas,
New York, NY 10020. Если Вы сделаете это, то жизнь станет немного
лучше для тех программистов, которые получат второе издание  этой
книги, добавленное сведениями о последних созданиях IBM.

   Удачного программирования!
                                           Robert Jourdain
</pre>
</html>
