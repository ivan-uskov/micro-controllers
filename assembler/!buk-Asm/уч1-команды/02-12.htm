<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="Author" content="Dmitry L. Smirnoff (C) 2001">
<link REL="stylesheet" HREF="(Styles).css" TYPE="text/css">
<title>2.1.2. Сегментные регистры</title>
</head>

<body background="(Фон).gif">

<hr>

<p>Всего имеется шесть 16-битных сегментных
регистров, которые определяют текущие сегменты
памяти, доступные для выполняющейся программы.
Например, существуют отдельные сегментные
регистры для обращения к пространству кода
(регистр CS), стека (регистр SS), а так же основного
(регистр DS) и дополнительных сегментов данных
(регистры ES, FS и GS).</p>

<p>Регистры CS, SS, DS, ES являются единственными
регистрами, которые сохранились неизменными от
процессора i8086, а два регистра FS и GS впервые
появились в процессоре i80386.</p>

<p>Имеются определенные особенности в
использовании сегментных регистров в
зависимости от режима работы процессора: 

<ul>
  <li><b>В реальном режиме</b> содержимое сегментного
    регистра непосредственно задает начальный адрес
    сегмента в физической памяти - физический адрес
    сегмента. При этом максимальный размер всех
    сегментов фиксирован и составляет 64 Кбайт.</li>
  <li><b>В защищенном режиме</b> содержимое сегментного
    регистра определяет сегмент косвенно, через так
    называемую дескрипторную таблицу (descriptor table). С ее
    помощью для каждого сегмента задаются базовый
    адрес (base), размер (limit) и права доступа (access rights),
    показывающие, какие программы и в каких
    операциях могут обращаться к конкретному
    сегменту. В этом режиме производить прямые
    обращения по физическим адресам памяти
    программист не может.</li>
</ul>

<p>Рассмотрим назначение сегментных регистров.</p>

<p><b>CS</b> - сегментный регистр кода (Code Segment).
Определяет текущий сегмент, который содержит
машинные команды, образующие собственно
программу и называемые кодом. Совместно с
регистром CS для выборки команд
используется регистр EIP(IP), содержащий смещение
текущей команды в сегменте кода.</p>

<p><b>SS</b> - сегментный регистр стека (Stack Segment).
Задает текущий сегмент стека, т.е. той области
памяти, в которой выполняются все стековые
операции. Напомним, что смещение вершины стека в сегменте стека
находится в регистре ESP (SP). Для доступа к данным в стеке
применяется регистр EBP(BP).</p>

<p><b>DS</b> - сегментный регистр данных (Data Segment).
Идентифицирует &quot;главный&quot; сегмент,
содержащий данные текущей программы. По
умолчанию (т.е. в тех случаях, когда сегмент в
команде явно не указан) именно с сегментным
регистром DS связаны любые операнды в командах
обращения к данным в памяти (кроме стековых
команд).</p>

<p><b>ES, FS, GS</b> - дополнительные сегментные регистры.
Предназначены для задания еще трех сегментов
данных, доступных текущей программе. Эти
сегментные регистры обязательно должны
указываться явно в командах обращения к данным в
памяти.</p>

<p>Для обращения к дополнительным сегментам
прикладная программа при своем выполнении может
загружать новые значения в регистры DS, ES, FS и GS.
Другими словами, единственное
требование для обращения к новому сегменту
состоит в том, чтобы до обращения к данным в
сегменте загрузить его адрес в сегментный регистр,
посредством которого это обращение будет
происходить.</p>

<p>Адрес данных внутри сегмента образуется
процессором как сумма начального адреса
сегмента и смещения (offset), указываемого в команде.
После выбора сегмента (посредством загрузки
значения в сегментный регистр) любые команды
программы используют только смещения в нем.</p>

<p>Явное указание сегментного регистра,
используемого в команде, не является обязательным. Если
сегментный регистр явно не указан, тогда
процессор автоматически выбирет сегмент в
соответствии со следующими правилами. 

<ul>
  <li>Для операндов в памяти по-умолчанию используется
    основной сегмент данных (сегмент DS).</li>
  <li>Если ссылка к памяти производится с помощью регистров ESP или EBP,
    тогда считается, что данные находятся в сегменте стека (сегмент SS).</li>
</ul>

<p>Для каждого из сегментных регистров
предусмотрен <b>префикс замены сегмента</b>. Он позволяет явно указать
через какой сегментный регистр в данной команде будет производится обращение к памяти.
Префикс не действует на выбор сегмента по умолчанию только
в следующих ситуациях: 

<ul>
  <li>В цепочечных командах операнд-получатель
    всегда находится в сегменте, заданном регистром ES.</li>
  <li>В командах работы со стеком получатель (при
    включении в стек) или источник (при извлечении из
    стека) всегда находится в сегменте, заданном
    регистром SS.</li>
  <li>Выборка команд всегда производится только из
    сегмента, указанного в регистре CS.</li>
</ul>

<hr>

<p>Следующий раздел - “<a href="02-13.htm">2.1.3. Указатель
команд</a>”</p>
</body>
</html>
